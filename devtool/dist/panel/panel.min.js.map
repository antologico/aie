{"version":3,"sources":["webpack:///webpack/bootstrap 84f64517a1daf5b5e81f","webpack:///./dev/panel/script/EventDispatcher.js","webpack:///./dev/panel/script/History.js","webpack:///./dev/panel/script/index.js","webpack:///./dev/panel/script/MemoryBlock.js","webpack:///./dev/panel/script/Connection.js","webpack:///./dev/panel/script/HistoryPanel.js","webpack:///./dev/panel/script/Panel.js","webpack:///./dev/panel/script/StatePanel.js","webpack:///./dev/panel/script/HitmapPanel.js","webpack:///./dev/panel/script/ConfigPanel.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","[object Object]","this","events","event","func","oldFunc","values","__WEBPACK_IMPORTED_MODULE_0__EventDispatcher__","__WEBPACK_IMPORTED_MODULE_1__MemoryBlock__","super","maxLevels","history","disabled","change","parseInt","state","element","length","splice","push","time","Date","calculate","index","item","moveHeader","find","value","__WEBPACK_IMPORTED_MODULE_0__History__","__WEBPACK_IMPORTED_MODULE_1__Connection__","__WEBPACK_IMPORTED_MODULE_2__HistoryPanel__","__WEBPACK_IMPORTED_MODULE_3__Panel__","__WEBPACK_IMPORTED_MODULE_4__StatePanel__","__WEBPACK_IMPORTED_MODULE_5__HitmapPanel__","__WEBPACK_IMPORTED_MODULE_6__ConfigPanel__","historyPanel","hitmapPanel","statePanel","connection","configPanel","panel","registerEvent","update","bind","updateMemoryField","changeMaxLevels","applyState","loadConfig","reciveValues","drawTable","updateValues","changeMark","activeMark","add","clean","deleteHistory","activeMarks","sendMark","sendConnect","onSearchChange","restoreScores","begin","MemoryBlock","obj","bytes","undefined","objClass","toString","slice","key","sizeOf","toFixed","size","formatByteSize","tabId","chrome","devtools","inspectedWindow","init","port","runtime","connect","updating","initValues","reciveMark","onReceiveUpdate","onClean","onMessage","addListener","message","target","action","console","log","receiveUpdate","post","postMessage","sendMessage","detail","detailJSON","JSON","parse","send","templateTimemachine","document","getElementById","innerHTML","content","onApply","onRestore","addEventListener","e","srcElement","hasAttribute","toItem","getAttribute","getItem","htmlCode","replace","toTimeString","getList","map","generateHistoryItem","join","onMarkChange","onDeleteHistory","onConnect","onActiveMarksChange","onFilterHitmap","loader","container","hitmapChecker","onMouseOver","onMouseOut","onClick","checked","getConsumedMemory","el","classList","remove","templateItem","propertyItem","templateList","table","list","id","generateItem","pregnancy","properties","children","getPrestace","generateList","reduce","prev","flatTree","valueList","minVal","a","b","Math","min","maxVal","max","arrowEl","color","style","prevValue","parseFloat","image","input","search","printButton","applyButton","restoreButton","historyIndex","maxPregnancy","searchItem","imageHeight","imageWidth","onInputChange","currentTarget","printSVG","templateRectagle","templateOption","templatePrintable","getLength","updateImage","next","physicalAttribute","forEach","left","top","width","height","getFillColor","updateMaxPregnancy","html","getRectagle","setAttribute","printWindow","write","window","open","setTimeout","createNewWindowForSVG","__WEBPACK_IMPORTED_MODULE_1__History__","DEFAULT_AUTO_APPLY","levels","autoApply","onLevelChange","onAutoApplyChange","localStorage","setItem","saveConfig","val"],"mappings":"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","file":"./dist/panel/panel.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 84f64517a1daf5b5e81f","class EventDispatcher {\n    constructor() {\n        this.events = {}\n    }\n\n    registerEvent(event, func) {\n        if (!this.events) {\n            this.events = {}\n        }\n\n        if (!this.events[event]) {\n            this.events[event] = func\n            return\n        }\n        const oldFunc = this.events[event]\n        this.events[event] = (values) => {\n            oldFunc(values)\n            func(values)\n        }\n    }\n}\n\nexport default EventDispatcher\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dev/panel/script/EventDispatcher.js\n// module id = 0\n// module chunks = 0","import EventDispatcher from './EventDispatcher'\nimport MemoryBlock from './MemoryBlock'\n\nexport const DEFAULT_MAX_LEVELS = 1000\n\nclass History extends EventDispatcher {\n    constructor () {\n      super()\n      this.maxLevels = null\n      this.history = []\n      this.disabled = false\n      this.events = {\n        change: () => {},\n      }\n    }\n  \n    changeMaxLevels (maxLevels) {\n      this.maxLevels = parseInt(maxLevels)\n    }\n\n    disable (disabled = true) {\n      this.disabled = disabled\n    }\n  \n    add ({event, state, element}) {\n      if (!this.disabled) {\n        if (this.maxLevels && this.maxLevels !== 0) {\n          if (this.history.length >= this.maxLevels) {\n            this.history.splice(0, this.history.length + 1 - this.maxLevels)\n          }\n        }\n        this.history.push ({\n          time: new Date(),\n          event,\n          element,\n          state,\n        })\n        this.events.change(this)\n      }\n    }\n  \n    clean () {\n      this.history = []\n      this.history.length = 0\n      this.events.change(this)\n    }\n  \n    getConsumedMemory () {\n      return MemoryBlock.calculate(this.history)\n    }\n  \n    getList () {\n      return this.history\n    }\n  \n    toItem (index) {\n      const i = parseInt(index)\n      const item = this.history[i]\n      this.moveHeader(i)\n      this.events.change(this)\n      return item\n    }\n  \n    getItem (index) {\n      return this.history[parseInt(index)]\n    }\n\n    moveHeader (index) {\n      this.history.length = index+1\n    }\n  \n    getMoment(time) {\n      return this.history.find((item) => item.time === time)\n    }\n\n    getLength() {\n      return this.history.length\n    }\n  }\n\n  export default History\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dev/panel/script/History.js\n// module id = 1\n// module chunks = 0","import History from './History'\nimport Connection from './Connection'\nimport History from './History'\nimport HistoryPanel from './HistoryPanel'\nimport Panel from './Panel'\nimport StatePanel from './StatePanel'\nimport HitmapPanel from './HitmapPanel'\nimport ConfigPanel from './ConfigPanel'\n\nconst history = new History()\nconst historyPanel = new HistoryPanel(history)\nconst hitmapPanel = new HitmapPanel(history)\nconst statePanel = new StatePanel()\nconst connection = new Connection()\nconst configPanel = new ConfigPanel(history)\nconst panel = new Panel()\n\nhistory.registerEvent('change', historyPanel.update.bind(historyPanel))\nhistory.registerEvent('change', panel.updateMemoryField.bind(panel))\n\nconfigPanel.registerEvent('onLevelChange', history.changeMaxLevels.bind(history))\nconfigPanel.registerEvent('onApply', connection.applyState.bind(connection))\nconfigPanel.loadConfig()\n\nconnection.registerEvent('initValues', panel.reciveValues.bind(panel))\nconnection.registerEvent('initValues', statePanel.drawTable.bind(statePanel))\nconnection.registerEvent('updateValues', statePanel.updateValues.bind(statePanel))\nconnection.registerEvent('updateValues', hitmapPanel.update.bind(hitmapPanel))\nconnection.registerEvent('updateValues', configPanel.update.bind(configPanel))\nconnection.registerEvent('reciveMark', panel.changeMark.bind(panel))\nconnection.registerEvent('activeMark', panel.activeMark.bind(panel))\nconnection.registerEvent('onReceiveUpdate', history.add.bind(history))\nconnection.registerEvent('onClean', history.clean.bind(history))\n\npanel.registerEvent('onDeleteHistory', history.clean.bind(history))\npanel.registerEvent('onDeleteHistory', connection.deleteHistory.bind(connection))\npanel.registerEvent('onApply', connection.applyState.bind(connection))\npanel.registerEvent('onActiveMarksChange', connection.activeMarks.bind(connection))\npanel.registerEvent('onMarkChange', connection.sendMark.bind(connection))\npanel.registerEvent('onConnect', connection.sendConnect.bind(connection))\npanel.registerEvent('onFilterHitmap', hitmapPanel.onSearchChange.bind(hitmapPanel))\n\nhitmapPanel.registerEvent('onApply', connection.applyState.bind(connection))\nhitmapPanel.registerEvent('onRestore', connection.applyState.bind(connection))\n\nhistoryPanel.registerEvent('onApply', connection.applyState.bind(connection))\nhistoryPanel.registerEvent('onRestore', connection.restoreScores.bind(connection))\n\nconnection.begin()\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dev/panel/script/index.js\n// module id = 2\n// module chunks = 0","class MemoryBlock {\n    static sizeOf(obj) {\n        let bytes = 0\n        if(obj !== null && obj !== undefined) {\n            switch(typeof obj) {\n            case 'number':\n                bytes += 8\n                break\n            case 'string':\n                bytes += obj.length * 2\n                break\n            case 'boolean':\n                bytes += 4\n                break\n            case 'object':\n                const objClass = Object.prototype.toString.call(obj).slice(8, -1)\n                if(objClass === 'Object' || objClass === 'Array') {\n                    for(const key in obj) {\n                        if(!obj.hasOwnProperty(key)) continue\n                        bytes += MemoryBlock.sizeOf(obj[key])\n                    }\n                } else bytes += obj.toString().length * 2\n                break\n            }\n        }\n        return bytes\n    }\n  \n    static formatByteSize(bytes) {\n        if(bytes < 1024) return bytes + \" bytes\"\n        else if(bytes < 1048576) return(bytes / 1024).toFixed(3) + \" KiB\"\n        else if(bytes < 1073741824) return(bytes / 1048576).toFixed(3) + \" MiB\"\n        else return(bytes / 1073741824).toFixed(3) + \" GiB\"\n    }\n  \n    static calculate (obj) {\n        const size = MemoryBlock.sizeOf(obj)\n        return MemoryBlock.formatByteSize(size)\n    }\n}\n\nexport default MemoryBlock\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dev/panel/script/MemoryBlock.js\n// module id = 3\n// module chunks = 0","\nimport EventDispatcher from './EventDispatcher'\n\nclass Connection extends EventDispatcher {\n    constructor() {\n        super()\n        this.tabId = chrome.devtools.inspectedWindow.tabId\n        this.init  = false\n        this.port = chrome.runtime.connect(null, { name: 'panel' })\n        this.updating = false\n        this.events = {\n            updateValues: () => {},\n            initValues: () => {},\n            activeMark: () => {},\n            reciveMark: () => {},\n            onReceiveUpdate: () => {},\n            onClean: () => {},\n        }\n\n        this.port.onMessage.addListener((message) => {\n            if (message.target !== 'panel') {\n              return\n            }\n            switch(message.action) {\n              case 'aie-update':\n              console.log(message)\n                this.receiveUpdate(message)\n                break\n              case 'aie-reset':\n                this.events.activeMark (false)\n                break\n              case 'aie-mark':\n                this.events.reciveMark (message.name, false)\n                break\n              case 'aie-unmark':\n                this.events.reciveMark (message.name, false)\n                break\n            }\n        })\n    }\n\n    begin () {\n        this.post({ action: 'init' })\n    }\n\n    post(message) {\n        message.tabId = this.tabId\n        message.target = 'content'\n        this.port.postMessage(message)\n    }   \n\n    send(message) {\n        message.tabId = this.tabId\n        message.target = 'content'\n        chrome.runtime.sendMessage(message)\n    }      \n\n    receiveUpdate ({ detail: detailJSON }) {\n        if (this.updating || !detailJSON) {\n          return\n        }\n        \n        this.updating = true\n        const { state, event, element } = JSON.parse(detailJSON)\n        \n        this.events.onReceiveUpdate({\n            event,\n            state,\n            element,\n        })\n        \n        if (this.init == false) {\n          this.init = true\n          this.events.initValues(state)\n        } else {\n          this.events.updateValues(state)\n        }\n        this.updating = false\n    }\n\n    sendMark ({ name, value }) {\n        this.send({\n            action: value ? 'aie-mark' : 'aie-unmark',\n            name: name,\n        })\n    }\n\n    sendConnect () {\n        this.init = false\n        this.events.onClean()\n        this.send({\n            action: 'aie-connect',\n            name: name,\n        })\n    }\n\n    restoreScores (state = null) {\n        this.send({\n            action: 'aie-restore',\n            state,\n        })\n    }\n\n    applyState (state = null) {\n        this.send({\n            action: 'aie-apply',\n            state,\n        })\n    }\n\n    activeMarks (value) {\n        this.send({\n            action: value? 'aie-active-mark' : 'aie-unactive-mark',\n        })\n    }\n\n    deleteHistory() {\n        this.send({\n            action: 'aie-trash',\n        })\n    }\n      \n}\n\nexport default Connection\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dev/panel/script/Connection.js\n// module id = 4\n// module chunks = 0","import EventDispatcher from './EventDispatcher'\n\nclass HistoryPanel extends EventDispatcher {\n    constructor (history) {    \n      super()  \n      this.templateTimemachine = document.getElementById('timemachine-template').innerHTML\n      this.content = document.getElementById('timemachine-table')\n      this.history = history\n      this.events = {\n        onApply: () => {},\n        onRestore: () => {},\n      }\n\n      document.addEventListener('click', (e) => {\n        const element = e.srcElement\n        if (element && element.hasAttribute('aie-history-restore-index')) {\n          const { state } = this.history.toItem(element.getAttribute('aie-history-restore-index'))\n          this.events.onRestore(state)\n        }\n        if (element && element.hasAttribute('aie-history-apply-index')) {\n          const { state } = this.history.getItem(element.getAttribute('aie-history-apply-index'))\n          this.events.onApply(state)\n        }\n      }, false)\n    }\n\n    generateHistoryItem ({index, event, element, time}) {\n      let htmlCode = this.templateTimemachine.replace(/{index}/g, index)\n      htmlCode = htmlCode.replace(/{event}/g, event)\n      htmlCode = htmlCode.replace(/{element}/g, element)\n      htmlCode = htmlCode.replace(/{name}/g, name)\n      htmlCode = htmlCode.replace(/{time}/i, time.toTimeString())\n      return htmlCode\n    }\n\n\n    update () {\n      this.content.innerHTML = this.history.getList().map(({time, event, element}, index) => this.generateHistoryItem({index, element, event, time})).join('')\n    }\n}\n\nexport default HistoryPanel\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dev/panel/script/HistoryPanel.js\n// module id = 5\n// module chunks = 0","import EventDispatcher from './EventDispatcher'\n\nclass Panel extends EventDispatcher {\n    constructor() {\n        super()\n        this.events = {\n            onMarkChange: () => {},\n            onDeleteHistory: () => {},\n            onConnect: () => {},\n            onActiveMarksChange: () => {},\n            onApply: () => {},\n            onFilterHitmap: () => {},\n        }\n        this.loader = document.getElementById('loader')\n        this.container = document.getElementById('container')\n        this.hitmapChecker = document.getElementById('hitmap-checker')\n\n        document.addEventListener('mouseover', (e) => this.onMouseOver(e.srcElement))\n        document.addEventListener('mouseout', (e) => this.onMouseOut(e.srcElement))\n        document.addEventListener('click', (e) => this.onClick(e.srcElement))\n          \n        document.getElementById('active-marks-checker').addEventListener('change', (e) =>\n            this.events.onActiveMarksChange(e.srcElement.checked)\n          , false)\n          \n        document.getElementById('toolbar-delete').addEventListener('click', (e) => {\n            this.events.onDeleteHistory()\n          }, false)\n        document.getElementById('toolbar-connect').addEventListener('click', (e) => {\n            this.events.onConnect()\n          }, false)\n          \n        document.getElementById('toolbar-apply').addEventListener('click', (e) => {\n            this.events.onApply()\n          }, false)\n    }\n\n    updateMemoryField(history) {\n        document.getElementById('memorySize').innerHTML = history.getConsumedMemory()\n    }\n\n    changeMark (name, value) {\n        const el = document.getElementById('label_' + name)\n        if (el) {\n            value ? el.classList.add('mark') : el.classList.remove('mark')\n        }\n    }\n\n    activeMark (value) {\n        document.getElementById('active-marks-checker').checked = value\n    }\n\n    onMouseOver (element) {\n        if (element.hasAttribute('aie-name')) {\n            this.events.onMarkChange ({name: element.getAttribute('aie-name'), value: true})\n        }\n    }\n\n    reciveValues () {\n        this.loader.classList.add('hide')\n        this.container.classList.remove('hide')\n    }\n\n    onMouseOut (element) {\n        if (element.hasAttribute('aie-name')) {\n            this.events.onMarkChange ({ name: element.getAttribute('aie-name'), value: false })\n        }\n    }\n\n    onClick (element) {\n        if (element.hasAttribute('hitmap-filter')) {\n            this.events.onFilterHitmap (element.getAttribute('hitmap-filter'))\n            this.hitmapChecker.checked = true\n        }\n    }\n}\n\nexport default Panel\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dev/panel/script/Panel.js\n// module id = 6\n// module chunks = 0","\nclass StatePanel {\n    constructor () {\n        this.templateItem = document.getElementById('item-template').innerHTML\n        this.propertyItem = document.getElementById('item-property').innerHTML\n        this.templateList = document.getElementById('list-template').innerHTML\n        this.table = document.getElementById('state-table')\n    }\n\n    clean () {\n      this.history = []\n      this.events.change(this)\n    }\n\n    generateList (list, id) {\n        if (!list || list.length === 0) {\n          return ''\n        }\n        let htmlCode = this.templateList.replace(\n          /{items}/,\n          list.map((item, key) => this.generateItem(item, `${id}_${key}`)).join('')\n        )\n        return htmlCode\n      }\n      \n    getPrestace (pregnancy) {\n        return pregnancy ? pregnancy.toFixed(4) : ''\n    }\n      \n    generateItem ({ name, pregnancy, properties, children}, id) {\n        let htmlCode = this.templateItem.replace(/{id}/g, name)\n        htmlCode = htmlCode.replace(/{name}/g, name)\n        htmlCode = htmlCode.replace(\n          /{properties}/g,\n          properties.map(property => this.propertyItem.replace(/{property}/i, property)).join(''))\n        htmlCode = htmlCode.replace(/{value}/i, this.getPrestace(pregnancy))\n        htmlCode = htmlCode.replace(\n          /{content}/i,\n          this.generateList(children, id))\n        return htmlCode\n      }\n      \n    drawTable(state) {\n        if (state) {\n          this.table.innerHTML = this.generateList(state, '0')\n        }\n      }\n\n    flatTree (list) {\n        if (!list || list.length === 0) {\n          return []\n        }\n        if (list) {\n          const map = list.reduce((prev, {name, pregnancy, children}) => ([\n            ...prev,\n            ...this.flatTree(children),\n            { name, pregnancy },\n          ]), [])\n          return map\n        }\n      }\n      \n    updateValues(list) {\n        if (!list || list.length === 0) {\n          return null\n        }\n        const valueList = this.flatTree(list)\n        const minVal = valueList.map(a => a.pregnancy).reduce((a, b) => Math.min(a, b), 1)\n        const maxVal = valueList.map(a => a.pregnancy).reduce((a, b) => Math.max(a, b), 0)\n        if (list) {\n          valueList.map(({name, pregnancy}) => {\n            const el = document.getElementById(`value_${name}`)\n            const arrowEl = document.getElementById(`arrow_${name}`)\n            if (el) {\n              const color = 'rgb(100, 100, ' + parseInt(255*(pregnancy-minVal)/(maxVal-minVal)) + ')'\n              el.style.color = color\n              arrowEl.style.color = color\n              const prevValue = parseFloat(el.innerHTML)\n              if (prevValue > pregnancy) {\n                arrowEl.innerHTML = '&darr;'\n              } else if (prevValue < pregnancy) {\n                arrowEl.innerHTML = '&uarr;'\n              } else if (!prevValue) {\n                arrowEl.innerHTML = ''\n              } else {\n                arrowEl.innerHTML = '='\n              }\n              el.innerHTML = this.getPrestace(pregnancy)\n            }\n          })\n        }\n      }\n}\n\nexport default StatePanel\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dev/panel/script/StatePanel.js\n// module id = 7\n// module chunks = 0","import EventDispatcher from './EventDispatcher'\n\nclass HitmapPanel extends EventDispatcher {\n    constructor (history) {\n        super()\n        this.templateTimemachine = document.getElementById('timemachine-template')\n        this.image = document.getElementById('hitmap-image')\n        this.input = document.getElementById('hitmap-input')\n        this.search = document.getElementById('hitmap-search')\n        this.printButton = document.getElementById('hitmap-print')\n        this.applyButton = document.getElementById('hitmap-apply')\n        this.restoreButton = document.getElementById('hitmap-restore')\n\n        this.history = history\n        this.historyIndex = 0\n        this.maxPregnancy = 0\n        this.searchItem = null\n        this.imageHeight = null\n        this.imageWidth = null\n        this.input.addEventListener('input', (e) => this.onInputChange(e.currentTarget.value))\n        this.search.addEventListener('change', (e) => this.onSearchChange(e.currentTarget.value))\n        this.printButton.addEventListener('click', () => this.printSVG())\n        \n        this.applyButton.addEventListener('click', () => this.onApply())\n        this.restoreButton.addEventListener('click', () => this.onRestore())\n\n        this.templateRectagle = document.getElementById('hitmap-rectangle').innerHTML\n        this.templateOption = document.getElementById('hitmap-search-option').innerHTML\n        this.templatePrintable = document.getElementById('svg-print').innerHTML\n\n        this.events = {\n            onApply: () => {},\n            onRestore: () => {},\n        }\n    }\n\n    onApply() {\n        const { state } = this.history.toItem(this.historyIndex)\n        this.events.onApply(state)\n    }\n\n    onRestore() {\n        const { state } = this.history.toItem(this.historyIndex)\n        this.events.onRestore(state)\n    }\n\n    onSearchChange (name) {\n        this.searchItem = name\n        this.onInputChange(this.input.value)\n    }\n\n    onInputChange(value) {\n        this.historyIndex = parseInt((this.history.getLength() - 1) * value / 100)\n        this.updateImage(this.history.getItem(this.historyIndex))\n    }\n\n    flatTree (list, search) {\n        if (!list || list.length === 0) {\n          return []\n        }\n        if (list) {\n          \n            if (search) {\n                return list.reduce((prev, {name, children}) => {\n                    const next = (name === search) \n                        ? this.flatTree(children, null) \n                        : this.flatTree(children, search)\n                    \n                        return [...prev, ...next]\n                }, []) \n          }\n\n          const map = list.reduce((prev, {name, pregnancy, children, physicalAttribute}) => ([\n            ...prev,\n            { name, pregnancy, physicalAttribute },\n            ...this.flatTree(children, null),\n          ]), [])\n          return map\n        }\n    }\n\n    updateMaxPregnancy(flatTree) {\n        flatTree.forEach(({pregnancy}) => {\n            if (pregnancy > this.maxPregnancy) {\n                this.maxPregnancy = pregnancy\n            }\n        })\n    }\n\n    getFillColor (pregnancy) {\n        const color = parseInt((pregnancy / this.maxPregnancy)  * 255)\n        return 'rgb(' + [color, 30, color].join(',') + ')'\n    }\n\n    getRectagle ({physicalAttribute, pregnancy, name}) {\n        const { left, top, width, height } = physicalAttribute\n\n        return (left !== undefined) && pregnancy \n            ? this.templateRectagle\n                .replace(/{left}/g, left)\n                .replace(/{top}/g, top)\n                .replace(/{width}/g, width)\n                .replace(/{height}/g, height)\n                .replace(/{fill}/g, this.getFillColor(pregnancy))\n                .replace(/{x}/g, (left + 2))\n                .replace(/{y}/g, (top + 8))\n                .replace(/{name}/g, name)\n            : ''\n    }\n\n    update(list) {\n        const flatTree = this.flatTree(list)\n        this.updateMaxPregnancy(flatTree)\n        this.input.value = 100\n        this.onInputChange(100)\n    }\n\n    updateImage ({ state }) {\n        const flatTree = this.flatTree(state, this.searchItem)\n        let imageHeight = 0, imageWidth = 0\n        const html = flatTree.map(({ physicalAttribute, pregnancy, name }) => {\n            return physicalAttribute ? this.getRectagle ({physicalAttribute, pregnancy, name}) : ''\n        }).join('')\n        this.search.innerHTML = this.flatTree(state, null).map(\n            ({ name, physicalAttribute }) => {\n                const { width, top, left , height } = physicalAttribute\n                if ((height + top) > imageHeight) {\n                    imageHeight = height + top\n                }\n                if ((left + width) > imageWidth) {\n                    imageWidth = left + width\n                }\n                return this.templateOption.replace(/{name}/g, name).replace(/{selected}/g, (this.searchItem === name ? 'selected' : ''))\n            }).join('')\n        this.image.innerHTML = html\n        this.imageWidth = imageWidth\n        this.imageHeight = imageHeight\n        this.image.setAttribute('viewBox', [0, 0, imageWidth, imageHeight].join(' '))\n        this.image.setAttribute('width', imageWidth + 'px')\n    }\n\n    createNewWindowForSVG(printWindow) {\n        if (this.imageWidth && this.imageHeight)\n        {\n            const content = this.templatePrintable\n                .replace(/{content}/g, this.image.innerHTML)\n                .replace(/{width}/g, this.imageWidth)\n                .replace(/{height}/g, this.imageHeight)\n            printWindow.document.write(content)\n        }\n    }\n\n    printSVG () {\n        if (this.imageWidth && this.imageHeight)\n        {\n           const printWindow = window.open('', '_blank', 'width=200 ,height=200', true)\n           setTimeout( this.createNewWindowForSVG.bind(this, printWindow) , 500);\n        }\n    }\n}\n\nexport default HitmapPanel\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dev/panel/script/HitmapPanel.js\n// module id = 8\n// module chunks = 0","import EventDispatcher from './EventDispatcher'\nimport { DEFAULT_MAX_LEVELS } from './History'\n\nconst DEFAULT_AUTO_APPLY = 0\n\nclass ConfigPanel extends EventDispatcher {\n    constructor (history) {    \n        super()  \n        this.history = history\n        this.levels = document.getElementById('config_level')\n        this.autoApply = document.getElementById('config_autoapply')\n\n        this.events = {\n            onLevelChange: () => {},\n            onApply: () => {},\n        }\n\n        this.levels.addEventListener('input', (e) => this.onLevelChange(e.currentTarget.value))\n        this.autoApply.addEventListener('input', (e) => this.onAutoApplyChange(e.currentTarget.value))\n    }\n\n    loadConfig() {\n        const levels = localStorage.getItem(\"aie.config.levels\")\n        const autoApply = localStorage.getItem(\"aie.config.autoApply\")\n        this.levels.value = levels || DEFAULT_MAX_LEVELS\n        this.autoApply.value = autoApply || DEFAULT_AUTO_APPLY\n        this.events.onLevelChange(this.levels.value)\n    }\n\n    saveConfig(item, value) {\n        localStorage.setItem(\"aie.config.\" + item, value)\n    }\n\n    onLevelChange (value) {\n        this.events.onLevelChange(value)\n        this.saveConfig('levels', value)\n    }\n\n    onAutoApplyChange (value) {\n        this.saveConfig('autoApply', value)\n    }\n\n    update () {\n        const val = parseInt(this.autoApply.value)\n        if (val && (this.history.getLength() % val === 0)) {\n            this.events.onApply()\n        }\n    }\n}\n\nexport default ConfigPanel\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dev/panel/script/ConfigPanel.js\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}