{"version":3,"sources":["webpack:///webpack/bootstrap d345ef9b828629141925","webpack:///./panel/script/EventDispatcher.js","webpack:///./panel/script/History.js","webpack:///./panel/script/index.js","webpack:///./panel/script/MemoryBlock.js","webpack:///./panel/script/Connection.js","webpack:///./panel/script/HistoryPanel.js","webpack:///./panel/script/Panel.js","webpack:///./panel/script/StatePanel.js","webpack:///./panel/script/HitmapPanel.js","webpack:///./panel/script/ConfigPanel.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","[object Object]","this","events","event","func","oldFunc","values","__WEBPACK_IMPORTED_MODULE_0__EventDispatcher__","__WEBPACK_IMPORTED_MODULE_1__MemoryBlock__","super","maxLevels","history","disabled","change","parseInt","state","element","length","splice","push","time","Date","calculate","index","item","moveHeader","find","value","__WEBPACK_IMPORTED_MODULE_0__History__","__WEBPACK_IMPORTED_MODULE_1__Connection__","__WEBPACK_IMPORTED_MODULE_2__HistoryPanel__","__WEBPACK_IMPORTED_MODULE_3__Panel__","__WEBPACK_IMPORTED_MODULE_4__StatePanel__","__WEBPACK_IMPORTED_MODULE_5__HitmapPanel__","__WEBPACK_IMPORTED_MODULE_6__ConfigPanel__","historyPanel","hitmapPanel","statePanel","connection","configPanel","panel","registerEvent","update","bind","updateMemoryField","changeMaxLevels","loadConfig","reciveValues","drawTable","updateValues","changeMark","activeMark","add","clear","deleteHistory","applyState","activeMarks","sendMark","sendConnect","restoreScores","begin","MemoryBlock","obj","bytes","undefined","objClass","toString","slice","key","sizeOf","toFixed","size","formatByteSize","tabId","chrome","devtools","inspectedWindow","init","port","runtime","connect","updating","initValues","reciveMark","onReceiveUpdate","onMessage","addListener","message","target","action","receiveUpdate","post","postMessage","sendMessage","detail","detailJSON","JSON","parse","send","templateTimemachine","document","getElementById","innerHTML","content","onApply","onRestore","addEventListener","e","srcElement","hasAttribute","toItem","getAttribute","getItem","htmlCode","replace","toTimeString","getList","map","generateHistoryItem","join","onMarkChange","onDeleteHistory","onConnect","onActiveMarksChange","loader","container","onMouseOver","onMouseOut","checked","getConsumedMemory","el","classList","remove","templateItem","propertyItem","templateList","table","list","id","generateItem","prestance","properties","children","getPrestace","generateList","reduce","prev","flatTree","valueList","minVal","a","b","Math","min","maxVal","max","arrowEl","color","style","prevValue","parseFloat","image","input","maxPrestance","onInputChange","currentTarget","physicalAttribute","getLength","updateImage","forEach","left","top","width","height","getFillColor","updateMaxPrestance","imageHeight","imageWidth","html","getRectagle","setAttribute","__WEBPACK_IMPORTED_MODULE_1__History__","levels","onLevelChange","localStorage","setItem","saveConfig"],"mappings":"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","file":"./panel/panel.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d345ef9b828629141925","class EventDispatcher {\n    constructor() {\n        this.events = {}\n    }\n\n    registerEvent(event, func) {\n        if (!this.events) {\n            this.events = {}\n        }\n\n        if (!this.events[event]) {\n            this.events[event] = func\n            return\n        }\n        const oldFunc = this.events[event]\n        this.events[event] = (values) => {\n            oldFunc(values)\n            func(values)\n        }\n    }\n}\n\nexport default EventDispatcher\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./panel/script/EventDispatcher.js\n// module id = 0\n// module chunks = 0","import EventDispatcher from './EventDispatcher'\nimport MemoryBlock from './MemoryBlock'\n\nexport const DEFAULT_MAX_LEVELS = 1000\n\nclass History extends EventDispatcher {\n    constructor () {\n      super()\n      this.maxLevels = null\n      this.history = []\n      this.disabled = false\n      this.events = {\n        change: () => {},\n      }\n    }\n  \n    changeMaxLevels (maxLevels) {\n      this.maxLevels = parseInt(maxLevels)\n    }\n\n    disable (disabled = true) {\n      this.disabled = disabled\n    }\n  \n    add ({event, state, element}) {\n      if (!this.disabled) {\n        if (this.maxLevels && this.maxLevels !== 0) {\n          if (this.history.length >= this.maxLevels) {\n            this.history.splice(0, this.history.length + 1 - this.maxLevels)\n          }\n        }\n        this.history.push ({\n          time: new Date(),\n          event,\n          element,\n          state,\n        })\n        this.events.change(this)\n      }\n    }\n  \n    clear () {\n      this.history = []\n      this.events.change(this)\n    }\n  \n    getConsumedMemory () {\n      return MemoryBlock.calculate(this.history)\n    }\n  \n    getList () {\n      return this.history\n    }\n  \n    toItem (index) {\n      const i = parseInt(index)\n      const item = this.history[i]\n      this.moveHeader(i)\n      this.events.change(this)\n      return item\n    }\n  \n    getItem (index) {\n      return this.history[parseInt(index)]\n    }\n\n    moveHeader (index) {\n      this.history.length = index+1\n    }\n  \n    getMoment(time) {\n      return this.history.find((item) => item.time === time)\n    }\n\n    getLength() {\n      return this.history.length\n    }\n  }\n\n  export default History\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./panel/script/History.js\n// module id = 1\n// module chunks = 0","import History from './History'\nimport Connection from './Connection'\nimport History from './History'\nimport HistoryPanel from './HistoryPanel'\nimport Panel from './Panel'\nimport StatePanel from './StatePanel'\nimport HitmapPanel from './HitmapPanel'\nimport ConfigPanel from './ConfigPanel'\n\nconst history = new History()\nconst historyPanel = new HistoryPanel(history)\nconst hitmapPanel = new HitmapPanel(history)\nconst statePanel = new StatePanel()\nconst connection = new Connection()\nconst configPanel = new ConfigPanel()\nconst panel = new Panel()\n\nhistory.registerEvent('change', historyPanel.update.bind(historyPanel))\nhistory.registerEvent('change', panel.updateMemoryField.bind(panel))\n\nconfigPanel.registerEvent('onLevelChange', history.changeMaxLevels.bind(history))\nconfigPanel.loadConfig()\n\nconnection.registerEvent('initValues', panel.reciveValues.bind(panel))\nconnection.registerEvent('initValues', statePanel.drawTable.bind(statePanel))\nconnection.registerEvent('updateValues', statePanel.updateValues.bind(statePanel))\nconnection.registerEvent('updateValues', hitmapPanel.update.bind(hitmapPanel))\nconnection.registerEvent('reciveMark', panel.changeMark.bind(panel))\nconnection.registerEvent('activeMark', panel.activeMark.bind(panel))\nconnection.registerEvent('onReceiveUpdate', history.add.bind(history))\n\npanel.registerEvent('onDeleteHistory', history.clear.bind(history))\npanel.registerEvent('onDeleteHistory', connection.deleteHistory.bind(connection))\npanel.registerEvent('onApply', connection.applyState.bind(connection))\npanel.registerEvent('onActiveMarksChange', connection.activeMarks.bind(connection))\npanel.registerEvent('onMarkChange', connection.sendMark.bind(connection))\npanel.registerEvent('onConnect', connection.sendConnect.bind(connection))\n\nhistoryPanel.registerEvent('onApply', connection.applyState.bind(connection))\nhistoryPanel.registerEvent('onRestore', connection.restoreScores.bind(connection))\n\nconnection.begin()\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./panel/script/index.js\n// module id = 2\n// module chunks = 0","class MemoryBlock {\n    static sizeOf(obj) {\n        let bytes = 0\n        if(obj !== null && obj !== undefined) {\n            switch(typeof obj) {\n            case 'number':\n                bytes += 8\n                break\n            case 'string':\n                bytes += obj.length * 2\n                break\n            case 'boolean':\n                bytes += 4\n                break\n            case 'object':\n                const objClass = Object.prototype.toString.call(obj).slice(8, -1)\n                if(objClass === 'Object' || objClass === 'Array') {\n                    for(const key in obj) {\n                        if(!obj.hasOwnProperty(key)) continue\n                        bytes += MemoryBlock.sizeOf(obj[key])\n                    }\n                } else bytes += obj.toString().length * 2\n                break\n            }\n        }\n        return bytes\n    }\n  \n    static formatByteSize(bytes) {\n        if(bytes < 1024) return bytes + \" bytes\"\n        else if(bytes < 1048576) return(bytes / 1024).toFixed(3) + \" KiB\"\n        else if(bytes < 1073741824) return(bytes / 1048576).toFixed(3) + \" MiB\"\n        else return(bytes / 1073741824).toFixed(3) + \" GiB\"\n    }\n  \n    static calculate (obj) {\n        const size = MemoryBlock.sizeOf(obj)\n        return MemoryBlock.formatByteSize(size)\n    }\n}\n\nexport default MemoryBlock\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./panel/script/MemoryBlock.js\n// module id = 3\n// module chunks = 0","\nimport EventDispatcher from './EventDispatcher'\n\nclass Connection extends EventDispatcher {\n    constructor() {\n        super()\n        this.tabId = chrome.devtools.inspectedWindow.tabId\n        this.init  = false\n        this.port = chrome.runtime.connect(null, { name: 'panel' })\n        this.updating = false\n        this.events = {\n            updateValues: () => {},\n            initValues: () => {},\n            activeMark: () => {},\n            reciveMark: () => {},\n            onReceiveUpdate: () => {},\n        }\n\n        this.port.onMessage.addListener((message) => {\n            if (message.target !== 'panel') {\n              return\n            }\n            switch(message.action) {\n              case 'aie-update':\n                this.receiveUpdate(message)\n                break\n              case 'aie-reset':\n                this.events.activeMark (false)\n                break\n              case 'aie-mark':\n                this.events.reciveMark (message.name, false)\n                break\n              case 'aie-unmark':\n                this.events.reciveMark (message.name, false)\n                break\n            }\n        })\n    }\n\n    begin () {\n        this.post({ action: 'init' })\n    }\n\n    post(message) {\n        message.tabId = this.tabId\n        message.target = 'content'\n        this.port.postMessage(message)\n    }   \n\n    send(message) {\n        message.tabId = this.tabId\n        message.target = 'content'\n        chrome.runtime.sendMessage(message)\n    }      \n\n    receiveUpdate ({ detail: detailJSON }) {\n        if (this.updating || !detailJSON) {\n          return\n        }\n        \n        this.updating = true\n        const { state, event, element } = JSON.parse(detailJSON)\n        \n        this.events.onReceiveUpdate({\n            event,\n            state,\n            element,\n        })\n        \n        if (this.init == false) {\n          this.init = true\n          this.events.initValues(state)\n        } else {\n          this.events.updateValues(state)\n        }\n        this.updating = false\n    }\n\n    sendMark ({ name, value }) {\n        this.send({\n            action: value ? 'aie-mark' : 'aie-unmark',\n            name: name,\n        })\n    }\n\n    sendConnect () {\n        this.send({\n            action: 'aie-connect',\n            name: name,\n        })\n    }\n\n    restoreScores (state = null) {\n        this.send({\n            action: 'aie-restore',\n            state,\n        })\n    }\n\n    applyState (state = null) {\n        this.send({\n            action: 'aie-apply',\n            state,\n        })\n    }\n\n    activeMarks (value) {\n        this.send({\n            action: value? 'aie-active-mark' : 'aie-unactive-mark',\n        })\n    }\n\n    deleteHistory() {\n        this.send({\n            action: 'aie-trash',\n        })\n    }\n      \n}\n\nexport default Connection\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./panel/script/Connection.js\n// module id = 4\n// module chunks = 0","import EventDispatcher from './EventDispatcher'\n\nclass HistoryPanel extends EventDispatcher {\n    constructor (history) {    \n      super()  \n      this.templateTimemachine = document.getElementById('timemachine-template').innerHTML\n      this.content = document.getElementById('timemachine-table')\n      this.history = history\n      this.events = {\n        onApply: () => {},\n        onRestore: () => {},\n      }\n\n      document.addEventListener('click', (e) => {\n        const element = e.srcElement\n        if (element && element.hasAttribute('aie-history-restore-index')) {\n          const { state } = this.history.toItem(element.getAttribute('aie-history-restore-index'))\n          this.events.onRestore(state)\n        }\n        if (element && element.hasAttribute('aie-history-apply-index')) {\n          const { state } = this.history.getItem(element.getAttribute('aie-history-apply-index'))\n          this.events.onApply(state)\n        }\n      }, false)\n    }\n\n    generateHistoryItem ({index, event, element, time}) {\n      let htmlCode = this.templateTimemachine.replace(/{index}/g, index)\n      htmlCode = htmlCode.replace(/{event}/g, event)\n      htmlCode = htmlCode.replace(/{element}/g, element)\n      htmlCode = htmlCode.replace(/{name}/g, name)\n      htmlCode = htmlCode.replace(/{time}/i, time.toTimeString())\n      return htmlCode\n    }\n\n\n    update () {\n      this.content.innerHTML = this.history.getList().map(({time, event, element}, index) => this.generateHistoryItem({index, element, event, time})).join('')\n    }\n}\n\nexport default HistoryPanel\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./panel/script/HistoryPanel.js\n// module id = 5\n// module chunks = 0","import EventDispatcher from './EventDispatcher'\n\nclass Panel extends EventDispatcher {\n    constructor() {\n        super()\n        this.events = {\n            onMarkChange: () => {},\n            onDeleteHistory: () => {},\n            onConnect: () => {},\n            onActiveMarksChange: () => {},\n            onApply: () => {},\n        }\n        this.loader = document.getElementById('loader')\n        this.container = document.getElementById('container')\n\n        document.addEventListener('mouseover', (e) => this.onMouseOver(e.srcElement))\n        document.addEventListener('mouseout', (e) => this.onMouseOut(e.srcElement))\n          \n        document.getElementById('active-marks-checker').addEventListener('change', (e) =>\n            this.events.onActiveMarksChange(e.srcElement.checked ? 'aie-active-mark' : 'aie-unactive-mark')\n          , false)\n          \n        document.getElementById('toolbar-delete').addEventListener('click', (e) => {\n            this.events.onDeleteHistory()\n          }, false)\n        document.getElementById('toolbar-connect').addEventListener('click', (e) => {\n            this.events.onConnect()\n          }, false)\n          \n        document.getElementById('toolbar-apply').addEventListener('click', (e) => {\n            this.events.onApply()\n          }, false)\n    }\n\n    updateMemoryField(history) {\n        document.getElementById('memorySize').innerHTML = history.getConsumedMemory()\n    }\n\n    changeMark (name, value) {\n        const el = document.getElementById('label_' + name)\n        if (el) {\n            value ? el.classList.add('mark') : el.classList.remove('mark')\n        }\n    }\n\n    activeMark (value) {\n        document.getElementById('active-marks-checker').checked = value\n    }\n\n    onMouseOver (element) {\n        if (element.hasAttribute('aie-name')) {\n            this.events.onMarkChange ({name: element.getAttribute('aie-name'), value: true})\n        }\n    }\n\n    reciveValues () {\n        this.loader.classList.add('hide')\n        this.container.classList.remove('hide')\n    }\n\n    onMouseOut (element) {\n        if (element.hasAttribute('aie-name')) {\n            this.events.onMarkChange ({ name: element.getAttribute('aie-name'), value: false })\n        }\n    }\n}\n\nexport default Panel\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./panel/script/Panel.js\n// module id = 6\n// module chunks = 0","\nclass StatePanel {\n    constructor () {\n        this.templateItem = document.getElementById('item-template').innerHTML\n        this.propertyItem = document.getElementById('item-property').innerHTML\n        this.templateList = document.getElementById('list-template').innerHTML\n        this.table = document.getElementById('state-table')\n    }\n\n    generateList (list, id) {\n        if (!list || list.length === 0) {\n          return ''\n        }\n        let htmlCode = this.templateList.replace(\n          /{items}/,\n          list.map((item, key) => this.generateItem(item, `${id}_${key}`)).join('')\n        )\n        return htmlCode\n      }\n      \n    getPrestace (prestance) {\n        return prestance ? prestance.toFixed(4) : ''\n    }\n      \n    generateItem ({ name, prestance, properties, children}, id) {\n        let htmlCode = this.templateItem.replace(/{id}/g, name)\n        htmlCode = htmlCode.replace(/{name}/g, name)\n        htmlCode = htmlCode.replace(\n          /{properties}/g,\n          properties.map(property => this.propertyItem.replace(/{property}/i, property)).join(''))\n        htmlCode = htmlCode.replace(/{value}/i, this.getPrestace(prestance))\n        htmlCode = htmlCode.replace(\n          /{content}/i,\n          this.generateList(children, id))\n        return htmlCode\n      }\n      \n    drawTable(state) {\n        if (state) {\n          this.table.innerHTML = this.generateList(state, '0')\n        }\n      }\n\n    flatTree (list) {\n        if (!list || list.length === 0) {\n          return []\n        }\n        if (list) {\n          const map = list.reduce((prev, {name, prestance, children}) => ([\n            ...prev,\n            ...this.flatTree(children),\n            { name, prestance },\n          ]), [])\n          return map\n        }\n      }\n      \n    updateValues(list) {\n        if (!list || list.length === 0) {\n          return null\n        }\n        const valueList = this.flatTree(list)\n        const minVal = valueList.map(a => a.prestance).reduce((a, b) => Math.min(a, b), 1)\n        const maxVal = valueList.map(a => a.prestance).reduce((a, b) => Math.max(a, b), 0)\n        if (list) {\n          valueList.map(({name, prestance}) => {\n            const el = document.getElementById(`value_${name}`)\n            const arrowEl = document.getElementById(`arrow_${name}`)\n            if (el) {\n              const color = 'rgb(100, 100, ' + parseInt(255*(prestance-minVal)/(maxVal-minVal)) + ')'\n              el.style.color = color\n              arrowEl.style.color = color\n              const prevValue = parseFloat(el.innerHTML)\n              if (prevValue > prestance) {\n                arrowEl.innerHTML = '&darr;'\n              } else if (prevValue < prestance) {\n                arrowEl.innerHTML = '&uarr;'\n              } else if (!prevValue) {\n                arrowEl.innerHTML = ''\n              } else {\n                arrowEl.innerHTML = '='\n              }\n              el.innerHTML = this.getPrestace(prestance)\n            }\n          })\n        }\n      }\n}\n\nexport default StatePanel\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./panel/script/StatePanel.js\n// module id = 7\n// module chunks = 0","class HitmapPanel {\n    constructor (history) {    \n        this.templateTimemachine = document.getElementById('timemachine-template')\n        this.image = document.getElementById('hitmap-image')\n        this.input = document.getElementById('hitmap-input')\n        this.history = history\n        this.index = 0\n        this.maxPrestance = 0\n        this.input.addEventListener('input', (e) => this.onInputChange(e.currentTarget.value))\n    }\n\n    flatTree (list) {\n        if (!list || list.length === 0) {\n          return []\n        }\n        if (list) {\n          const map = list.reduce((prev, {name, prestance, physicalAttribute, children}) => ([\n            ...prev,\n            ...this.flatTree(children),\n            { name, prestance, physicalAttribute },\n          ]), [])\n          return map\n        }\n    }\n\n    onInputChange(value) {\n        const index = parseInt((this.history.getLength() - 1) * value / 100)\n        this.updateImage(this.history.getItem(index))\n    }\n\n    flatTree (list) {\n        if (!list || list.length === 0) {\n          return []\n        }\n        if (list) {\n          const map = list.reduce((prev, {name, prestance, children, physicalAttribute}) => ([\n            ...prev,\n            { name, prestance, physicalAttribute },\n            ...this.flatTree(children),\n          ]), [])\n          return map\n        }\n    }\n\n    updateMaxPrestance(flatTree) {\n        flatTree.forEach(({prestance}) => {\n            if (prestance > this.maxPrestance) {\n                this.maxPrestance = prestance\n            }\n        })\n    }\n\n    getFillColor (prestance) {\n        const color = parseInt(prestance / this.maxPrestance  * 255)\n        return 'rgb(' + [color, 30, color].join(',') + ')'\n    }\n\n    getRectagle ({physicalAttribute, prestance, name}) {\n        const { left, top, width, height } = physicalAttribute\n\n        return (left !== undefined) && prestance \n            ? '<rect x=\"' + left + '\" \\\n                y=\"' + top +'\" \\\n                width=\"' + width +'\" \\\n                height=\"' + height +'\" \\\n                fill=\"'+ this.getFillColor(prestance) +'\" /> \\\n                <text x=\"' + (left + 2) + '\" y=\"' + (top + 8) +'\" fill=\"white\" font-size=\"6\">' + name + '</text>' \n            : ''\n    }\n\n    update(list) {\n        const flatTree = this.flatTree(list)\n        this.updateMaxPrestance(flatTree)\n        this.input.value = 100\n        this.onInputChange(100)\n    }\n\n    updateImage ({ state }) {\n        const flatTree = this.flatTree(state)\n        let imageHeight = 0, imageWidth = 0\n        const html = flatTree.map(({ physicalAttribute, prestance, name }) => {\n            const { width, top, left , height } = physicalAttribute\n            if (height + top > imageHeight) {\n                imageHeight = height + top\n            }\n            if (left + width > imageWidth) {\n                imageWidth = left + width\n            }\n            return physicalAttribute ? this.getRectagle ({physicalAttribute, prestance, name}) : ''\n        }).join('')\n        this.image.innerHTML = html\n        this.image.setAttribute('viewBox', [0, 0, imageWidth, imageHeight].join(' '))\n    }\n}\n\nexport default HitmapPanel\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./panel/script/HitmapPanel.js\n// module id = 8\n// module chunks = 0","import EventDispatcher from './EventDispatcher'\nimport { DEFAULT_MAX_LEVELS } from './History'\n\nclass ConfigPanel extends EventDispatcher {\n    constructor () {    \n        super()  \n        this.levels = document.getElementById('config_level')\n\n        this.events = {\n            onLevelChange: () => {},\n        }\n\n        this.levels.addEventListener('input', (e) => this.onLevelChange(e.currentTarget.value))\n    }\n\n    loadConfig() {\n        const levels = localStorage.getItem(\"aie.config.levels\")\n        this.levels.value = levels || DEFAULT_MAX_LEVELS\n        this.events.onLevelChange(this.levels.value)\n    }\n\n    saveConfig(item, value) {\n        localStorage.setItem(\"aie.config.\" + item, value)\n    }\n\n    onLevelChange (value) {\n        this.events.onLevelChange(value)\n        this.saveConfig('levels', value)\n    }\n}\n\nexport default ConfigPanel\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./panel/script/ConfigPanel.js\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}